# Конфигурация Nginx для AI Manager Platform
# Файл должен быть размещен на сервере: /etc/nginx/sites-available/adaptoai.ru

server {
    listen 80;
    listen [::]:80;
    server_name adaptoai.ru www.adaptoai.ru;
    
    # Перенаправление HTTP на HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name adaptoai.ru www.adaptoai.ru;

    # SSL сертификаты (путь к вашим сертификатам от Регру)
    ssl_certificate /etc/ssl/certs/adaptoai.ru.crt;
    ssl_certificate_key /etc/ssl/private/adaptoai.ru.key;

    # SSL настройки безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Логи
    access_log /var/log/nginx/adaptoai-access.log;
    error_log /var/log/nginx/adaptoai-error.log;

    # Максимальный размер тела запроса (для загрузки файлов)
    client_max_body_size 50M;

    # Статические файлы из dist папки (собранное приложение)
    location ~* \.(png|jpg|jpeg|gif|svg|ico|css|js|woff|woff2|ttf|eot)$ {
        root /var/www/ai-platform/dist;
        expires 1h;  # Короткий кеш для JS/CSS файлов
        add_header Cache-Control "public, no-cache";
        try_files $uri =404;
    }
    
    # Статические файлы из public папки (изображения, иконки)
    location ~* \.(png|jpg|jpeg|gif|svg|ico)$ {
        root /var/www/ai-platform/public;
        expires 30d;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # API роуты - прокси на Node.js приложение
    location /api/ {
        proxy_pass http://localhost:3001/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Увеличенные таймауты для AI запросов
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # WebSocket через API (единый порт 3001)
    location /api/websocket {
        proxy_pass http://localhost:3001/api/websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # WebSocket специфичные настройки
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
    }

    # WebSocket для диалогов (старый endpoint)
    location /dialogs/ {
        proxy_pass http://localhost:3001/dialogs/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Основное приложение - прокси на Node.js
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Favicon
    location /favicon.ico {
        alias /var/www/ai-platform/public/favicon.ico;
        access_log off;
    }

    # Robots.txt
    location /robots.txt {
        alias /var/www/ai-platform/public/robots.txt;
        access_log off;
    }
}
