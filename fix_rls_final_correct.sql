-- üîí –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è RLS —Å —É—á–µ—Ç–æ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–æ–≤
-- –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ 20 –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª–∏—Ç–∏–∫

-- ============================================
-- 1. –ò–°–ü–†–ê–í–õ–Ø–ï–ú INSERT –ü–û–õ–ò–¢–ò–ö–ò –ë–ï–ó –£–°–õ–û–í–ò–ô (qual IS NULL) - 17 —à—Ç—É–∫
-- ============================================

-- assistants - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own assistants" ON assistants;
CREATE POLICY "Users can insert their own assistants" ON assistants
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- autoswitch_settings - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º user_id, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç project_id)
DROP POLICY IF EXISTS "Users can insert their own autoswitch settings" ON autoswitch_settings;
CREATE POLICY "Users can insert their own autoswitch settings" ON autoswitch_settings
    FOR INSERT WITH CHECK (auth.uid() = user_id);

-- chat_messages - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own chat messages" ON chat_messages;
CREATE POLICY "Users can insert their own chat messages" ON chat_messages
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- conversations - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own conversations" ON conversations;
CREATE POLICY "Users can insert their own conversations" ON conversations
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- dialogs - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own dialogs" ON dialogs;
CREATE POLICY "Users can insert their own dialogs" ON dialogs
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- knowledge_chunks - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own knowledge chunks" ON knowledge_chunks;
CREATE POLICY "Users can insert their own knowledge chunks" ON knowledge_chunks
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- knowledge_sources - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own knowledge sources" ON knowledge_sources;
CREATE POLICY "Users can insert their own knowledge sources" ON knowledge_sources
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- niches - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º auth.uid() IS NOT NULL, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞)
DROP POLICY IF EXISTS "Only authenticated users can insert niches" ON niches;
CREATE POLICY "Only authenticated users can insert niches" ON niches
    FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

-- project_members - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (—É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º)
-- –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É

-- projects - INSERT –ø–æ–ª–∏—Ç–∏–∫–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º owner_id)
DROP POLICY IF EXISTS "Users can insert their own projects" ON projects;
CREATE POLICY "Users can insert their own projects" ON projects
    FOR INSERT WITH CHECK (auth.uid() = owner_id);

DROP POLICY IF EXISTS "projects_insert" ON projects;
CREATE POLICY "projects_insert" ON projects
    FOR INSERT WITH CHECK (owner_id = auth.uid());

-- telegram_settings - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own telegram settings" ON telegram_settings;
CREATE POLICY "Users can insert their own telegram settings" ON telegram_settings
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- user_niches - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own user niches" ON user_niches;
CREATE POLICY "Users can insert their own user niches" ON user_niches
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- users - INSERT –ø–æ–ª–∏—Ç–∏–∫–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º id)
DROP POLICY IF EXISTS "Users can insert their own data" ON users;
CREATE POLICY "Users can insert their own data" ON users
    FOR INSERT WITH CHECK (auth.uid() = id);

DROP POLICY IF EXISTS "Users can insert their own profile" ON users;
CREATE POLICY "Users can insert their own profile" ON users
    FOR INSERT WITH CHECK (auth.uid() = id);

DROP POLICY IF EXISTS "users_insert" ON users;
CREATE POLICY "users_insert" ON users
    FOR INSERT WITH CHECK (id = auth.uid());

-- widget_development_settings - INSERT –ø–æ–ª–∏—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º project_id)
DROP POLICY IF EXISTS "Users can insert their own widget settings" ON widget_development_settings;
CREATE POLICY "Users can insert their own widget settings" ON widget_development_settings
    FOR INSERT WITH CHECK (project_id = get_user_project_id());

-- ============================================
-- 2. –ò–°–ü–†–ê–í–õ–Ø–ï–ú SELECT –ü–û–õ–ò–¢–ò–ö–ò –° qual = "true" - 3 —à—Ç—É–∫–∏
-- ============================================

-- niche_synonyms - SELECT –ø–æ–ª–∏—Ç–∏–∫–∞ (—Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å true)
-- –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞

-- niches - SELECT –ø–æ–ª–∏—Ç–∏–∫–∏ (—Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å true)
-- –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞

-- ============================================
-- 2. –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢
-- ============================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –ø–æ–ª–∏—Ç–∏–∫ –æ—Å—Ç–∞–ª–æ—Å—å –±–µ–∑ —É—Å–ª–æ–≤–∏–π
SELECT 
    '‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô' as section,
    COUNT(*) as total_policies,
    COUNT(*) FILTER (WHERE qual IS NULL) as null_condition_policies,
    COUNT(*) FILTER (WHERE qual = 'true') as true_condition_policies,
    COUNT(*) FILTER (WHERE qual LIKE '%get_user_project_id()%') as project_based_policies,
    COUNT(*) FILTER (WHERE qual LIKE '%auth.uid()%') as user_based_policies,
    ROUND(
        COUNT(*) FILTER (WHERE qual LIKE '%get_user_project_id()%' OR qual LIKE '%auth.uid()%') * 100.0 / COUNT(*), 
        2
    ) as secure_policies_percent
FROM pg_policies 
WHERE schemaname = 'public';

-- ============================================
-- 3. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò
-- ============================================

-- –ò—â–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
SELECT 
    'üö® –û–°–¢–ê–í–®–ò–ï–°–Ø –ü–†–û–ë–õ–ï–ú–´' as section,
    schemaname,
    tablename,
    policyname,
    cmd,
    qual,
    with_check,
    CASE 
        WHEN qual IS NULL THEN '–ü–æ–ª–∏—Ç–∏–∫–∞ –±–µ–∑ —É—Å–ª–æ–≤–∏–π WHERE'
        WHEN qual = 'true' THEN '–ü–æ–ª–∏—Ç–∏–∫–∞ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –≤—Å–µ (true)'
        WHEN qual LIKE '%get_user_project_id()%' AND tablename NOT IN (
            SELECT table_name FROM information_schema.columns 
            WHERE table_schema = 'public' 
            AND column_name = 'project_id'
            AND table_name = pg_policies.tablename
        ) THEN '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç get_user_project_id() –Ω–æ –Ω–µ—Ç project_id –≤ —Ç–∞–±–ª–∏—Ü–µ'
        ELSE '–î—Ä—É–≥–∞—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞'
    END as problem_type
FROM pg_policies 
WHERE schemaname = 'public'
AND (
    qual IS NULL 
    OR qual = 'true'
    OR (qual LIKE '%get_user_project_id()%' AND tablename NOT IN (
        SELECT table_name FROM information_schema.columns 
        WHERE table_schema = 'public' 
        AND column_name = 'project_id'
        AND table_name = pg_policies.tablename
    ))
)
ORDER BY tablename, policyname;

-- ============================================
-- 4. –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –¢–ò–ü–ê–ú –ü–û–õ–ò–¢–ò–ö
-- ============================================

SELECT 
    'üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê' as section,
    COUNT(*) as total_policies,
    COUNT(*) FILTER (WHERE cmd = 'SELECT') as select_policies,
    COUNT(*) FILTER (WHERE cmd = 'INSERT') as insert_policies,
    COUNT(*) FILTER (WHERE cmd = 'UPDATE') as update_policies,
    COUNT(*) FILTER (WHERE cmd = 'DELETE') as delete_policies,
    COUNT(*) FILTER (WHERE cmd = 'ALL') as all_policies,
    COUNT(*) FILTER (WHERE qual LIKE '%get_user_project_id()%') as project_based_policies,
    COUNT(*) FILTER (WHERE qual LIKE '%auth.uid()%') as user_based_policies,
    COUNT(*) FILTER (WHERE qual IS NULL) as null_condition_policies,
    COUNT(*) FILTER (WHERE qual = 'true') as true_condition_policies
FROM pg_policies 
WHERE schemaname = 'public';
