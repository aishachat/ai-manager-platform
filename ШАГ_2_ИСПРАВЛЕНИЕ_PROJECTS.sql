-- üîß –®–ê–ì 2: –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï RLS –î–õ–Ø –¢–ê–ë–õ–ò–¶–´ PROJECTS
-- –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

-- ============================================
-- 1. –ü–†–û–í–ï–†–Ø–ï–ú –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ PROJECTS
-- ============================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
SELECT 
    'üìã –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ PROJECTS' as section,
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns
WHERE table_schema = 'public' 
AND table_name = 'projects'
ORDER BY ordinal_position;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å RLS
SELECT 
    'üîí –°–¢–ê–¢–£–° RLS' as section,
    tablename,
    rowsecurity
FROM pg_tables 
WHERE schemaname = 'public' 
AND tablename = 'projects';

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏
SELECT 
    'üìú –¢–ï–ö–£–©–ò–ï –ü–û–õ–ò–¢–ò–ö–ò' as section,
    policyname,
    cmd,
    qual,
    with_check,
    CASE 
        WHEN qual IS NULL THEN '‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç —É—Å–ª–æ–≤–∏–π WHERE'
        WHEN qual = 'true' THEN '‚ùå –ü–†–û–ë–õ–ï–ú–ê: –†–∞–∑—Ä–µ—à–∞–µ—Ç –≤—Å–µ'
        WHEN qual LIKE '%auth.uid()%' THEN '‚úÖ –•–û–†–û–®–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç user_id'
        WHEN qual LIKE '%get_user_project_id()%' THEN '‚úÖ –û–¢–õ–ò–ß–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç project_id'
        ELSE '‚ö†Ô∏è –ü–†–û–í–ï–†–ò–¢–¨: –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞'
    END as quality_status
FROM pg_policies 
WHERE schemaname = 'public' 
AND tablename = 'projects'
ORDER BY cmd, policyname;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
SELECT 
    'üìä –ö–û–õ–ò–ß–ï–°–¢–í–û –ó–ê–ü–ò–°–ï–ô' as section,
    COUNT(*) as total_projects,
    COUNT(*) FILTER (WHERE id IS NOT NULL) as projects_with_id,
    COUNT(*) FILTER (WHERE owner_id IS NOT NULL) as projects_with_owner,
    COUNT(*) FILTER (WHERE name IS NOT NULL) as projects_with_name
FROM public.projects;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
SELECT 
    'üîó –°–í–Ø–ó–¨ –° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò' as section,
    COUNT(DISTINCT owner_id) as unique_owners,
    COUNT(*) as total_projects,
    ROUND(COUNT(*)::numeric / COUNT(DISTINCT owner_id), 2) as avg_projects_per_user
FROM public.projects;

-- ============================================
-- 2. –ò–°–ü–†–ê–í–õ–Ø–ï–ú RLS –î–õ–Ø –¢–ê–ë–õ–ò–¶–´ PROJECTS
-- ============================================

-- –í–∫–ª—é—á–∞–µ–º RLS
ALTER TABLE public.projects ENABLE ROW LEVEL SECURITY;

-- –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
DROP POLICY IF EXISTS "projects_all" ON public.projects;
DROP POLICY IF EXISTS "Users can view their own projects" ON public.projects;
DROP POLICY IF EXISTS "Users can insert their own projects" ON public.projects;
DROP POLICY IF EXISTS "Users can update their own projects" ON public.projects;
DROP POLICY IF EXISTS "Users can delete their own projects" ON public.projects;
DROP POLICY IF EXISTS "projects_owner_access" ON public.projects;
DROP POLICY IF EXISTS "projects_policy" ON public.projects;

-- –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–ª–∏—Ç–∏–∫—É –¥–ª—è projects
-- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã (–≥–¥–µ –æ–Ω owner)
CREATE POLICY "projects_owner_access" ON public.projects
    FOR ALL USING (owner_id = auth.uid())
    WITH CHECK (owner_id = auth.uid());

-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞
GRANT ALL ON public.projects TO authenticated;

-- ============================================
-- 3. –ü–†–û–í–ï–†–Ø–ï–ú –ö–ê–ß–ï–°–¢–í–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø
-- ============================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å RLS –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
SELECT 
    '‚úÖ –°–¢–ê–¢–£–° RLS –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø' as section,
    tablename,
    rowsecurity
FROM pg_tables 
WHERE schemaname = 'public' 
AND tablename = 'projects';

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
SELECT 
    '‚úÖ –ù–û–í–´–ï –ü–û–õ–ò–¢–ò–ö–ò' as section,
    policyname,
    cmd,
    qual,
    with_check,
    CASE 
        WHEN qual IS NULL THEN '‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç —É—Å–ª–æ–≤–∏–π WHERE'
        WHEN qual = 'true' THEN '‚ùå –ü–†–û–ë–õ–ï–ú–ê: –†–∞–∑—Ä–µ—à–∞–µ—Ç –≤—Å–µ'
        WHEN qual LIKE '%auth.uid()%' THEN '‚úÖ –•–û–†–û–®–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç user_id'
        WHEN qual LIKE '%get_user_project_id()%' THEN '‚úÖ –û–¢–õ–ò–ß–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç project_id'
        ELSE '‚ö†Ô∏è –ü–†–û–í–ï–†–ò–¢–¨: –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞'
    END as quality_status
FROM pg_policies 
WHERE schemaname = 'public' 
AND tablename = 'projects'
ORDER BY cmd, policyname;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
SELECT 
    'üîë –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê' as section,
    grantee,
    privilege_type
FROM information_schema.table_privileges
WHERE table_schema = 'public' 
AND table_name = 'projects'
ORDER BY grantee, privilege_type;

-- ============================================
-- 4. –¢–ï–°–¢–ò–†–£–ï–ú –ò–ó–û–õ–Ø–¶–ò–Æ –î–ê–ù–ù–´–•
-- ============================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
-- (–≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –æ—Ç –∏–º–µ–Ω–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
SELECT 
    'üß™ –¢–ï–°–¢ –ò–ó–û–õ–Ø–¶–ò–ò' as section,
    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã' as test_description,
    COUNT(*) as visible_projects
FROM public.projects;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –∏–º–µ—é—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞
SELECT 
    'üîç –ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò' as section,
    '–ü—Ä–æ–µ–∫—Ç—ã –±–µ–∑ –≤–ª–∞–¥–µ–ª—å—Ü–∞' as check_type,
    COUNT(*) as count
FROM public.projects
WHERE owner_id IS NULL;

-- ============================================
-- 5. –ü–†–û–í–ï–†–Ø–ï–ú –§–£–ù–ö–¶–ò–Æ get_user_project_id()
-- ============================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç
SELECT 
    'üîß –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–ò' as section,
    'get_user_project_id() —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' as check_type,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM pg_proc 
            WHERE proname = 'get_user_project_id' 
            AND pronamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public')
        ) THEN '‚úÖ –§—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
        ELSE '‚ùå –§—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
    END as status;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ—É–Ω–∫—Ü–∏–∏
SELECT 
    'üìã –°–¢–†–£–ö–¢–£–†–ê –§–£–ù–ö–¶–ò–ò' as section,
    proname as function_name,
    proargnames as argument_names,
    proargtypes::regtype[] as argument_types,
    prorettype::regtype as return_type
FROM pg_proc 
WHERE proname = 'get_user_project_id' 
AND pronamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public');

-- ============================================
-- 6. –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–û –¢–ê–ë–õ–ò–¶–ï PROJECTS
-- ============================================

SELECT 
    'üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–û PROJECTS' as section,
    'RLS –≤–∫–ª—é—á–µ–Ω' as rls_status,
    '–ü–æ–ª–∏—Ç–∏–∫–∞ projects_owner_access —Å–æ–∑–¥–∞–Ω–∞' as policy_status,
    '–ü—Ä–∞–≤–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã' as permissions_status,
    '–ì–æ—Ç–æ–≤–æ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É' as next_step
UNION ALL
SELECT 
    'üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê' as section,
    '–í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: ' || COUNT(*)::text as rls_status,
    '–° RLS –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏: ' || (SELECT COUNT(*) FROM pg_policies WHERE schemaname = 'public' AND tablename = 'projects')::text as policy_status,
    '–ü—Ä–∞–≤–∞ –¥–ª—è authenticated: ' || (SELECT COUNT(*) FROM information_schema.table_privileges WHERE table_schema = 'public' AND table_name = 'projects' AND grantee = 'authenticated')::text as permissions_status,
    '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: project_members' as next_step
FROM public.projects
UNION ALL
SELECT 
    'üîó –°–í–Ø–ó–ò' as section,
    '–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤: ' || COUNT(DISTINCT owner_id)::text as rls_status,
    '–ü—Ä–æ–µ–∫—Ç–æ–≤ –±–µ–∑ –≤–ª–∞–¥–µ–ª—å—Ü–∞: ' || COUNT(*) FILTER (WHERE owner_id IS NULL)::text as policy_status,
    '–°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ' || ROUND(COUNT(*)::numeric / COUNT(DISTINCT owner_id), 2)::text as permissions_status,
    '–§—É–Ω–∫—Ü–∏—è get_user_project_id: ' || CASE 
        WHEN EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'get_user_project_id' AND pronamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public')) 
        THEN '‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' 
        ELSE '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞' 
    END as next_step
FROM public.projects;
