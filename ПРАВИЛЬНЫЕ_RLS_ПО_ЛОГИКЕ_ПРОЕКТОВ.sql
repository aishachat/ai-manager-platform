-- üîß –ü–†–ê–í–ò–õ–¨–ù–´–ï RLS –ü–û–õ–ò–¢–ò–ö–ò –ü–û –õ–û–ì–ò–ö–ï –ü–†–û–ï–ö–¢–û–í
-- 1 –ø—Ä–æ–µ–∫—Ç = 1 AI –∞–≥–µ–Ω—Ç = 1 –Ω–∞–±–æ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫

-- ============================================
-- 1. –ê–ù–ê–õ–ò–ó –¢–ï–ö–£–©–ï–ô –°–ò–¢–£–ê–¶–ò–ò
-- ============================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –∞–≥–µ–Ω—Ç–æ–≤ —É –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
SELECT 
    'üìä –ê–ù–ê–õ–ò–ó –ê–ì–ï–ù–¢–û–í –ü–û –ü–†–û–ï–ö–¢–ê–ú' as section,
    project_id,
    COUNT(*) as agent_count,
    CASE 
        WHEN COUNT(*) = 1 THEN '‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: 1 –∞–≥–µ–Ω—Ç –Ω–∞ –ø—Ä–æ–µ–∫—Ç'
        WHEN COUNT(*) > 1 THEN '‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ú–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–µ–∫—Ç'
        ELSE '‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –∞–≥–µ–Ω—Ç–æ–≤'
    END as status
FROM public.assistants
WHERE project_id IS NOT NULL
GROUP BY project_id
ORDER BY agent_count DESC;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ ai_agent_settings
SELECT 
    'üîç –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶–´ AI_AGENT_SETTINGS' as section,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ai_agent_settings')
        THEN '‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
        ELSE '‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
    END as table_status;

-- ============================================
-- 2. –ü–†–ê–í–ò–õ–¨–ù–´–ï RLS –ü–û–õ–ò–¢–ò–ö–ò
-- ============================================

-- –î–ª—è —Ç–∞–±–ª–∏—Ü—ã assistants (1 –∞–≥–µ–Ω—Ç –Ω–∞ –ø—Ä–æ–µ–∫—Ç)
DROP POLICY IF EXISTS "assistants_project_access" ON public.assistants;
DROP POLICY IF EXISTS "assistants_simple_access" ON public.assistants;

CREATE POLICY "assistants_one_per_project" ON public.assistants
    FOR ALL USING (
        project_id IN (
            SELECT id FROM public.projects WHERE owner_id = auth.uid()
        )
    )
    WITH CHECK (
        project_id IN (
            SELECT id FROM public.projects WHERE owner_id = auth.uid()
        )
    );

-- –î–ª—è —Ç–∞–±–ª–∏—Ü—ã ai_agent_settings (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
DO $$
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ai_agent_settings') THEN
        -- –í–∫–ª—é—á–∞–µ–º RLS
        EXECUTE 'ALTER TABLE public.ai_agent_settings ENABLE ROW LEVEL SECURITY';
        
        -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
        EXECUTE 'DROP POLICY IF EXISTS "ai_agent_settings_all" ON public.ai_agent_settings';
        EXECUTE 'DROP POLICY IF EXISTS "Users can view their own ai_agent_settings" ON public.ai_agent_settings';
        EXECUTE 'DROP POLICY IF EXISTS "Users can insert their own ai_agent_settings" ON public.ai_agent_settings';
        EXECUTE 'DROP POLICY IF EXISTS "Users can update their own ai_agent_settings" ON public.ai_agent_settings';
        EXECUTE 'DROP POLICY IF EXISTS "Users can delete their own ai_agent_settings" ON public.ai_agent_settings';
        
        -- –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–ª–∏—Ç–∏–∫—É
        EXECUTE 'CREATE POLICY "ai_agent_settings_project_access" ON public.ai_agent_settings
            FOR ALL USING (
                project_id IN (
                    SELECT id FROM public.projects WHERE owner_id = auth.uid()
                )
            )
            WITH CHECK (
                project_id IN (
                    SELECT id FROM public.projects WHERE owner_id = auth.uid()
                )
            )';
        
        -- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞
        EXECUTE 'GRANT ALL ON public.ai_agent_settings TO authenticated';
        
        RAISE NOTICE '‚úÖ RLS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è ai_agent_settings';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_agent_settings –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
    END IF;
END $$;

-- ============================================
-- 3. –ü–û–õ–ò–¢–ò–ö–ò –î–õ–Ø –î–†–£–ì–ò–• –¢–ê–ë–õ–ò–¶
-- ============================================

-- –î–ª—è —Ç–∞–±–ª–∏—Ü—ã knowledge_sources (–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø—Ä–æ–µ–∫—Ç–∞)
ALTER TABLE public.knowledge_sources ENABLE ROW LEVEL SECURITY;
DROP POLICY IF EXISTS "knowledge_sources_project_access" ON public.knowledge_sources;

CREATE POLICY "knowledge_sources_project_access" ON public.knowledge_sources
    FOR ALL USING (
        project_id IN (
            SELECT id FROM public.projects WHERE owner_id = auth.uid()
        )
    )
    WITH CHECK (
        project_id IN (
            SELECT id FROM public.projects WHERE owner_id = auth.uid()
        )
    );

-- –î–ª—è —Ç–∞–±–ª–∏—Ü—ã knowledge_chunks (—á–∞–Ω–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π)
ALTER TABLE public.knowledge_chunks ENABLE ROW LEVEL SECURITY;
DROP POLICY IF EXISTS "knowledge_chunks_project_access" ON public.knowledge_chunks;

CREATE POLICY "knowledge_chunks_project_access" ON public.knowledge_chunks
    FOR ALL USING (
        project_id IN (
            SELECT id FROM public.projects WHERE owner_id = auth.uid()
        )
    )
    WITH CHECK (
        project_id IN (
            SELECT id FROM public.projects WHERE owner_id = auth.uid()
        )
    );

-- –î–ª—è —Ç–∞–±–ª–∏—Ü—ã user_niches (–Ω–∏—à–∞ –ø—Ä–æ–µ–∫—Ç–∞)
ALTER TABLE public.user_niches ENABLE ROW LEVEL SECURITY;
DROP POLICY IF EXISTS "user_niches_project_access" ON public.user_niches;

CREATE POLICY "user_niches_project_access" ON public.user_niches
    FOR ALL USING (
        project_id IN (
            SELECT id FROM public.projects WHERE owner_id = auth.uid()
        )
    )
    WITH CHECK (
        project_id IN (
            SELECT id FROM public.projects WHERE owner_id = auth.uid()
        )
    );

-- ============================================
-- 4. –°–û–ó–î–ê–ï–ú –ò–ù–î–ï–ö–°–´ –î–õ–Ø –ë–´–°–¢–†–û–ô –†–ê–ë–û–¢–´
-- ============================================

-- –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ project_id
CREATE INDEX IF NOT EXISTS idx_assistants_project_id ON public.assistants(project_id);
CREATE INDEX IF NOT EXISTS idx_knowledge_sources_project_id ON public.knowledge_sources(project_id);
CREATE INDEX IF NOT EXISTS idx_knowledge_chunks_project_id ON public.knowledge_chunks(project_id);
CREATE INDEX IF NOT EXISTS idx_user_niches_project_id ON public.user_niches(project_id);

-- –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ –≤–ª–∞–¥–µ–ª—å—Ü—É
CREATE INDEX IF NOT EXISTS idx_projects_owner_id ON public.projects(owner_id);

-- ============================================
-- 5. –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢
-- ============================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏
SELECT 
    '‚úÖ –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ò–¢–ò–ö' as section,
    tablename,
    policyname,
    cmd,
    CASE 
        WHEN qual LIKE '%project_id IN (SELECT id FROM public.projects WHERE owner_id = auth.uid())%' 
        THEN '‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –ò–∑–æ–ª—è—Ü–∏—è –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º'
        ELSE '‚ö†Ô∏è –ü–†–û–í–ï–†–ò–¢–¨: –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞'
    END as policy_status
FROM pg_policies 
WHERE schemaname = 'public' 
AND tablename IN ('assistants', 'knowledge_sources', 'knowledge_chunks', 'user_niches')
ORDER BY tablename, policyname;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
SELECT 
    '‚ö° –ü–†–û–í–ï–†–ö–ê –ò–ù–î–ï–ö–°–û–í' as section,
    indexname,
    tablename,
    CASE 
        WHEN indexdef LIKE '%project_id%' THEN '‚úÖ –ï—Å—Ç—å –∏–Ω–¥–µ–∫—Å –ø–æ project_id'
        WHEN indexdef LIKE '%owner_id%' THEN '‚úÖ –ï—Å—Ç—å –∏–Ω–¥–µ–∫—Å –ø–æ owner_id'
        ELSE '‚ö†Ô∏è –î—Ä—É–≥–æ–π –∏–Ω–¥–µ–∫—Å'
    END as index_status
FROM pg_indexes 
WHERE schemaname = 'public' 
AND tablename IN ('assistants', 'knowledge_sources', 'knowledge_chunks', 'user_niches', 'projects')
ORDER BY tablename, indexname;

-- ============================================
-- 6. –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
-- ============================================

SELECT 
    'üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢' as section,
    '–ü–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–æ –ª–æ–≥–∏–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤' as status,
    '1 –ø—Ä–æ–µ–∫—Ç = 1 –∞–≥–µ–Ω—Ç = 1 –Ω–∞–±–æ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫' as principle,
    '–ò–∑–æ–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–±–µ—Å–ø–µ—á–µ–Ω–∞' as result
UNION ALL
SELECT 
    'üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê' as section,
    '–ü–æ–ª–∏—Ç–∏–∫ —Å–æ–∑–¥–∞–Ω–æ: ' || COUNT(*)::text as status,
    '–¢–∞–±–ª–∏—Ü –∑–∞—â–∏—â–µ–Ω–æ: ' || COUNT(DISTINCT tablename)::text as principle,
    '–ò–Ω–¥–µ–∫—Å–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: ' || (SELECT COUNT(*) FROM pg_indexes WHERE schemaname = 'public' AND tablename IN ('assistants', 'knowledge_sources', 'knowledge_chunks', 'user_niches', 'projects'))::text as result
FROM pg_policies 
WHERE schemaname = 'public' 
AND tablename IN ('assistants', 'knowledge_sources', 'knowledge_chunks', 'user_niches');
