#!/bin/bash

# üîí –ó–∞–ø—É—Å–∫ RLS –∞—É–¥–∏—Ç–∞ —á–µ—Ä–µ–∑ Supabase API
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç RLS –∞—É–¥–∏—Ç –±–µ–∑ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ PostgreSQL

echo "üîí –ó–∞–ø—É—Å–∫ RLS –∞—É–¥–∏—Ç–∞..."

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL="https://jppujbttlrsobfwuzalw.supabase.co"
SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpwcHVqYnR0bHJzb2Jmd3V6YWx3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU2Mjc3MDMsImV4cCI6MjA3MTIwMzcwM30.W-NgL1PIaAIUQfi5BtvFukSqLLG0ZPQDCKcs70sUaHY"

# –¢–∞–±–ª–∏—Ü—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
TABLES=("users" "dialogs" "chat_messages" "knowledge_sources" "knowledge_chunks" "assistants" "conversations")

echo "üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RLS –¥–ª—è ${#TABLES[@]} —Ç–∞–±–ª–∏—Ü..."

# –°—á–µ—Ç—á–∏–∫–∏
PASSED=0
FAILED=0
WARNINGS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
test_table_rls() {
    local table=$1
    echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: $table"
    
    # –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    echo "  üìã –¢–µ—Å—Ç 1: –ê–Ω–æ–Ω–∏–º–Ω—ã–π –¥–æ—Å—Ç—É–ø..."
    response=$(curl -s -w "%{http_code}" -o /dev/null \
        -H "apikey: $SUPABASE_ANON_KEY" \
        -H "Authorization: Bearer $SUPABASE_ANON_KEY" \
        "$SUPABASE_URL/rest/v1/$table?select=*&limit=1")
    
    if [ "$response" = "401" ] || [ "$response" = "403" ]; then
        echo "    ‚úÖ RLS –±–ª–æ–∫–∏—Ä—É–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—ã–π –¥–æ—Å—Ç—É–ø (–∫–æ–¥: $response)"
        ((PASSED++))
    elif [ "$response" = "200" ]; then
        echo "    ‚ùå –£–Ø–ó–í–ò–ú–û–°–¢–¨: –ê–Ω–æ–Ω–∏–º–Ω—ã–π –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω!"
        ((FAILED++))
    else
        echo "    ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç (–∫–æ–¥: $response)"
        ((WARNINGS++))
    fi
    
    # –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ –≤—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    echo "  üìã –¢–µ—Å—Ç 2: –ê–Ω–æ–Ω–∏–º–Ω–∞—è –≤—Å—Ç–∞–≤–∫–∞..."
    response=$(curl -s -w "%{http_code}" -o /dev/null \
        -X POST \
        -H "apikey: $SUPABASE_ANON_KEY" \
        -H "Authorization: Bearer $SUPABASE_ANON_KEY" \
        -H "Content-Type: application/json" \
        -d '{"test_field": "RLS Test"}' \
        "$SUPABASE_URL/rest/v1/$table")
    
    if [ "$response" = "401" ] || [ "$response" = "403" ]; then
        echo "    ‚úÖ RLS –±–ª–æ–∫–∏—Ä—É–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—É—é –≤—Å—Ç–∞–≤–∫—É (–∫–æ–¥: $response)"
        ((PASSED++))
    elif [ "$response" = "201" ]; then
        echo "    ‚ùå –£–Ø–ó–í–ò–ú–û–°–¢–¨: –ê–Ω–æ–Ω–∏–º–Ω–∞—è –≤—Å—Ç–∞–≤–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞!"
        ((FAILED++))
    else
        echo "    ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç (–∫–æ–¥: $response)"
        ((WARNINGS++))
    fi
    
    # –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    echo "  üìã –¢–µ—Å—Ç 3: –ê–Ω–æ–Ω–∏–º–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
    response=$(curl -s -w "%{http_code}" -o /dev/null \
        -X PATCH \
        -H "apikey: $SUPABASE_ANON_KEY" \
        -H "Authorization: Bearer $SUPABASE_ANON_KEY" \
        -H "Content-Type: application/json" \
        -d '{"test_field": "RLS Update Test"}' \
        "$SUPABASE_URL/rest/v1/$table?id=eq.00000000-0000-0000-0000-000000000000")
    
    if [ "$response" = "401" ] || [ "$response" = "403" ]; then
        echo "    ‚úÖ RLS –±–ª–æ–∫–∏—Ä—É–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–∫–æ–¥: $response)"
        ((PASSED++))
    elif [ "$response" = "200" ]; then
        echo "    ‚ùå –£–Ø–ó–í–ò–ú–û–°–¢–¨: –ê–Ω–æ–Ω–∏–º–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ!"
        ((FAILED++))
    else
        echo "    ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç (–∫–æ–¥: $response)"
        ((WARNINGS++))
    fi
    
    # –¢–µ—Å—Ç 4: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    echo "  üìã –¢–µ—Å—Ç 4: –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ..."
    response=$(curl -s -w "%{http_code}" -o /dev/null \
        -X DELETE \
        -H "apikey: $SUPABASE_ANON_KEY" \
        -H "Authorization: Bearer $SUPABASE_ANON_KEY" \
        "$SUPABASE_URL/rest/v1/$table?id=eq.00000000-0000-0000-0000-000000000000")
    
    if [ "$response" = "401" ] || [ "$response" = "403" ]; then
        echo "    ‚úÖ RLS –±–ª–æ–∫–∏—Ä—É–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (–∫–æ–¥: $response)"
        ((PASSED++))
    elif [ "$response" = "204" ]; then
        echo "    ‚ùå –£–Ø–ó–í–ò–ú–û–°–¢–¨: –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ!"
        ((FAILED++))
    else
        echo "    ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç (–∫–æ–¥: $response)"
        ((WARNINGS++))
    fi
    
    echo ""
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
for table in "${TABLES[@]}"; do
    test_table_rls "$table"
done

# –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
TOTAL=$((PASSED + FAILED + WARNINGS))
SUCCESS_RATE=$((PASSED * 100 / TOTAL))

echo "=========================================="
echo "üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ RLS –ê–£–î–ò–¢–ê"
echo "=========================================="
echo "‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED"
echo "‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $FAILED"
echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNINGS"
echo "üìà –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $PASSED/$TOTAL"
echo "üéØ –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: $SUCCESS_RATE%"

if [ $SUCCESS_RATE -ge 90 ]; then
    echo "üéâ –û–¢–õ–ò–ß–ù–û! RLS –ø–æ–ª–∏—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    exit 0
elif [ $SUCCESS_RATE -ge 70 ]; then
    echo "‚ö†Ô∏è  –•–û–†–û–®–û, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    exit 1
else
    echo "üö® –ö–†–ò–¢–ò–ß–ù–û! RLS –ø–æ–ª–∏—Ç–∏–∫–∏ —Ç—Ä–µ–±—É—é—Ç —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    exit 2
fi
